{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/forms/app-validation/app-validation.component.ts","./src/app/components/forms/app-validation/app-validation.component.html","./src/app/components/forms/pratice-form/pratice-form.component.ts","./src/app/components/forms/pratice-form/pratice-form.component.html","./src/app/components/forms/reactive-form/reactive-form.component.ts","./src/app/components/forms/reactive-form/reactive-form.component.html","./src/app/components/forms/template-driven/template-driven.component.ts","./src/app/components/forms/template-driven/template-driven.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/components/postform/postform.component.ts","./src/app/components/postform/postform.component.html","./src/app/components/pratice-component/pratice-component.component.ts","./src/app/components/pratice-component/pratice-component.component.html","./src/app/components/pratice-observable/pratice-observable.component.ts","./src/app/components/pratice-observable/pratice-observable.component.html","./src/app/components/users/user.component.ts","./src/app/components/users/user.component.html","./src/app/dummy/form/form.component.ts","./src/app/dummy/form/form.component.html","./src/app/dummy/validation/validation.component.ts","./src/app/dummy/validation/validation.component.html","./src/app/id-generate/id-generate.component.ts","./src/app/id-generate/id-generate.component.html","./src/app/service/data.service.ts","./src/app/service/observable-data.service.ts","./src/app/service/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PraticeObservableComponent } from '../components/pratice-observable/pratice-observable.component';\nimport { ReactiveFormComponent } from '../components/forms/reactive-form/reactive-form.component';\nimport { PostComponent } from '../components/post/post.component';\nimport { IdGenerateComponent } from '../id-generate/id-generate.component';\nimport { PageNotFoundComponent } from '../components/page-not-found/page-not-found.component';\n\nconst routes : Routes = [\n  {path:\"\", component:PraticeObservableComponent},\n  {path:\"form\", component:ReactiveFormComponent},\n  {path:\"post\", component:PostComponent},\n  {path:\"posts/:id\",component:IdGenerateComponent},\n  {path:\"**\",component:PageNotFoundComponent},\n];\n\n@NgModule({\n  exports:[RouterModule],\n  imports: [\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'praticeAngular';\n}\n","<!-- <p>Welecome to Angular</p> -->\n<!-- <app-user></app-user> -->\n<!-- <app-navbar></app-navbar> -->\n<!-- <app-pratice-component></app-pratice-component> -->\n<!-- <app-template-driven></app-template-driven> -->\n\n<!-- <app-reactive-form></app-reactive-form> -->\n\n<!-- <app-pratice-form></app-pratice-form> -->\n\n<!-- <app-form></app-form> -->\n\n<!-- <app-pratice-observable></app-pratice-observable> -->\n<!-- <app-post></app-post> -->\n<nav class=\"navbar navbar-light\" style=\"background-color: #e3f2fd;\">\n    <a class=\"navbar-brand\" routerLink=\"/\" [routerLinkActive]=\"['active']\" style = \"color:green\">Home</a>\n    <a class=\"navbar-brand\" routerLink=\"/form\" [routerLinkActive]=\"['active']\" style = \"color:green\" >Pre</a>\n    <a class=\"navbar-brand\" routerLink=\"/post\" [routerLinkActive]=\"['active']\" style = \"color:green\" >Post</a>\n  </nav>\n  asasas\n  <!-- <i class=\"fab fa-accessible-icon\"></i> -->\n  <!-- <i class=\"fa fa-adversal\"></i>\n  <i class=\"fa fa-address-card\"></i> -->\n  <!-- <i class=\"fa fa-biking\"></i> -->\n  <!-- <i class=\"fa fa-address-book\"></i> -->\n  <!-- <i class=\"fa fa-album\"></i> -->\n  <i class=\"fa fa-plus\"></i>\n  <i class=\"fa fa-plus-square\"></i>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserComponent } from './components/users/user.component';\nimport { PraticeComponentComponent } from './components/pratice-component/pratice-component.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { from } from 'rxjs';\nimport { TemplateDrivenComponent } from './components/forms/template-driven/template-driven.component';\nimport { ReactiveFormComponent } from './components/forms/reactive-form/reactive-form.component';\nimport { PraticeFormComponent } from './components/forms/pratice-form/pratice-form.component';\nimport { AppValidationComponent } from './components/forms/app-validation/app-validation.component';\nimport { FormComponent } from './dummy/form/form.component';\nimport { ValidationComponent } from './dummy/validation/validation.component';\nimport { PraticeObservableComponent } from './components/pratice-observable/pratice-observable.component';\nimport { PostComponent } from './components/post/post.component';\nimport { PostformComponent } from './components/postform/postform.component';\nimport { AppRoutingModule } from \"./app-routing/app-routing.module\";\nimport { IdGenerateComponent } from './id-generate/id-generate.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    PraticeComponentComponent,\n    NavbarComponent,\n    TemplateDrivenComponent,\n    ReactiveFormComponent,\n    PraticeFormComponent,\n    AppValidationComponent,\n    FormComponent,\n    ValidationComponent,\n    PraticeObservableComponent,\n    PostComponent,\n    PostformComponent,\n    IdGenerateComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n ","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-app-validation',\n  templateUrl: './app-validation.component.html',\n  styleUrls: ['./app-validation.component.css']\n})\nexport class AppValidationComponent implements OnInit {\n\n  @Input() control;\n  @Input() submitted1;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>app-validation works!</p> -->\n\n{{submitted1}} >>>>>>>>>>>\n\n<div *ngIf= \" ( control.touched  ||  submitted1)\" class=\"text-danger\">\n    <small *ngIf=\"control.errors?.required\" class=\"form-text\" >Required Field</small>\n    <small *ngIf=\"control.errors.minlength\" class=\"form-text\" >Password is to short</small>\n    <small *ngIf=\"control.errors.email\" class=\"form-text\" >Enter valid email address</small>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-pratice-form',\n  templateUrl: './pratice-form.component.html',\n  styleUrls: ['./pratice-form.component.css']\n})\nexport class PraticeFormComponent implements OnInit {\n\n  registeredForm : FormGroup;\n  submitted: boolean =false\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registeredForm = this.fb.group({\n      name:[\"\",[Validators.required,Validators.minLength]]\n    })\n  }\n\n  formValidation(){\n    this.submitted = true;\n  }\n\n}\n","<div class=\"form-container\">\r\n\r\n    <form [formGroup]=\"registeredForm\" (ngSubmit)=\"formValidation()\">\r\n        <label>Enter Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n\r\n    <app-app-validation [control]=\"registeredForm.controls.name\" [submitted1]=\"submitted\"> </app-app-validation>\r\n<div class=\"submit\">\r\n            <button class=\"btn btn-success mb-2\">Submit</button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.css']\n})\nexport class ReactiveFormComponent implements OnInit {\n\n  show : boolean = true;\n    submitted = false;\n  registrationForm: FormGroup;\n\n  data = {\n    firstName:\"\"\n  }\n\n  arrayData =[];\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.registrationForm = this.formBuilder.group({\n    \n            name: [\"\", [Validators.required, Validators.minLength(6)]],\n\n          });\n  }\n  get f() { return this.registrationForm.controls; }\n\n\n      submitRegistrationForm() {\n        this.submitted = true;\n        if (this.registrationForm.valid) {\n          this.arrayData.push(this.data);\n        }\n      }\n\n}\n","<div class=\"container\">\n    <button class=\"btn btn-primary mb-2\" (click)=\"show = !show\">Add User</button>\n    <div class=\"formName\" *ngIf=\"show\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"submitRegistrationForm()\">\n            <label>Enter Name</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"data.firstName\" formControlName=\"name\">\n            \n            <span class=\"text-danger\"\n                *ngIf=\"(registrationForm.controls.name.touched || submitted) && registrationForm.controls.name.errors?.required\">\n                Name is required\n            </span>\n\n          \n\n            <!-- <span class=\"text-danger\"\n                *ngIf=\"(registrationForm.controls.name.touched || submitted) && registrationForm.controls.name.errors?.minlength\">\n                minimum 6 character\n            </span> -->\n\n            <button class=\"btn btn-success mb-2\">Add</button>\n        </form>\n    </div>\n    <div *ngFor=\"let data of arrayData\" class=\"text-display\"> {{data.firstName}}</div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/module/user';\n\n@Component({\n  selector: 'app-template-driven',\n  templateUrl: './template-driven.component.html',\n  styleUrls: ['./template-driven.component.css']\n})\nexport class TemplateDrivenComponent implements OnInit {\n\n  users: User[];\n\n\n  //Pass the name of the form\n\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    age: null,\n    balance: null,\n  };\n  showExtended: boolean = false;\n  loaded: boolean = false;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form : any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // setTimeout(()=>{\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n    this.loaded = true;\n    // },2000)\n\n    this.newData({\n      firstName: 'aj',\n      lastName: 'anand',\n      email: 'ajayanand@gmailcom',\n      age: 23,\n      balance: 1000,\n      hide: true,\n    });\n  }\n\n  newData(user: User) {\n    this.users.push(user);\n  }\n\n  // addUser() {\n  //   this.user.hide = true;\n\n  //   this.users.unshift(this.user);\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  // }\n\n  clickEvent(e) {\n    console.log('The type of the event is ', e.type);\n  }\n\n  toogleValue(user: User) {\n    user.hide = !user.hide;\n    console.log('>>>>>>>>>>>>>>>>>>>useruseruser>>>>>>>>>>>', user.hide);\n  }\n  onSubmit({value , valid} : {value: User, valid: boolean}){\n    // if(!valid){\n      console.log(\"Form is not vaasaaaaaaaaaaaaaaaaalid\")\n    // }\n    // else{\n      this.user.hide = true;\n\n      this.users.unshift(value);\n      this.form.reset();\n    // }\n  }\n}\n","<form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\" >\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type=\"text\" name=\"firstName\" class=\"form-control \" [(ngModel)]=\"user.firstName\"\n        [ngClass]=\"{'is-invalid': userFirstName.errors && userFirstName.touched }\"\n        #userFirstName=\"ngModel\"\n        required\n        minlength=\"2\">\n        <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n            First Name is Required\n        </div>\n        <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n            minimum length is 2 characters!\n        </div>\n    </div>\n \n    {{user.firstName}}\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"user.lastName\">\n    </div>\n    <div class=\"form-group\">\n        <label>Age</label>\n        <input type=\"number\" name=\"age\" class=\"form-control\" [(ngModel)]=\"user.age\">\n    </div>\n    <div class=\"form-group\">\n        <label>Balance</label>\n        <input type=\"number\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"user.balance\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" name=\"email\" class=\"form-control\" \n        [(ngModel)]=\"user.email\"\n        [ngClass]=\"{'is-invalid': userEmail.errors && userEmail.touched }\"\n        #userEmail=\"ngModel\"\n        required \n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n        >\n        <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n            Email is Required\n        </div>\n        <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n            Invalid Email\n        </div>\n    </div>\n<button [disabled]=\"!userForm.form.valid\"\nclass=\"btn btn-success\" >Add New User</button> \n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\nusers;\n\n  constructor() { \n    this.setCurrentClasses(); \n    this.randomColorChanger();\n\n  }\n\n  AddButton : boolean = true;\n  greenButton : boolean = true;\n  // colorChange : boolean = true;\n  color: boolean = true;\n  currentClasses = {};\n  colorChange = {};\n\n  ngOnInit(): void {\n\n    this.users={\n      name:\"muthu\",\n      age:24,\n      proffession:\"Developer\",\n      hide:true,\n    }\n  }\n\n  setCurrentClasses() {\n    this.currentClasses ={\n      'btn-success':this.AddButton,\n      'big-text': this.greenButton\n    }\n  }\n\n  randomColorChanger(){\n    this.colorChange ={\n      // 'grenBtn':this.greenButton,\n      // 'redBtn':this.greenButton\n    }\n  }\n\n  valueChane(){\n    this.users.hide = !this.users.hide;\n  }\n}\n","<!-- <nav class=\"navbar navbar-dark bg-primary mb-4\">\n    <div class=\"container\">\n        <a href=\"#\" class=\"navbar-brand\">Angular APP</a>\n    </div>\n</nav>\n{{currentClassesbtn-sucess}}\n<button [disabled]=\"!AddButton\" [ngClass]=\"currentClasses\">Add New User</button>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n    </div>\n  </div> -->\n\n\n\n  <!-- <h2>Users</h2> -->\n  \n  <!-- <ul class=\"list-unstyled\"> -->\n <!-- <li  [style.color]=\"colorChange ? 'red' : '' \" >{{users.age}}</li> -->\n\n <!-- <button [ngClass]=\"colorChange\" [style.border-color]=\"colorChange\">ADD ME!!!</button> -->\n\n      <!-- <li class=\"card card-body md-2\" [style.border-color]=\"colorChange\" >{{users.name}}</li> -->\n      <!-- {{colorChange.grenBtn}} -->\n      <!-- <li class=\"card card-body md-2\" [style.border-color]=\"colorChange ? 'green' : '' \" >{{users.age}}</li> -->\n  <!-- </ul> -->\n  <!-- <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i> -->\n  <i [ngClass]=\"'fa fa-plus'\" (click) =\"valueChane()\"></i> <br>\n\n<span *ngIf=\"!users.hide\"> >>>>>>>>>>>>.asdjashdsaoj>>>>>>>>>>>>>>> {{users.name}}</span>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>404 Page Not Found</p>\n","import { Component, OnInit } from '@angular/core';\nimport { PostUser } from 'src/app/module/post.service';\nimport { PostService } from '../../service/post.service'\nimport { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  constructor(private postService : PostService) { }\n\n  posts  : PostUser[];\n\n  currentPost = {\n    id:\"0\",\n    title:\"\",\n    body:\"\"\n  }\n\n  isEdited : boolean = false;\n\n  // currentPost;\n\n  ngOnInit(): void {\n    this.postService.getPosts().subscribe( postdata =>{\n\n      console.log(postdata);\n      this.posts = postdata;\n\n    })\n  }\n\n  onNewPost(post) {\n    // console.log(\">>>>>>>>>>>post>>>>>>>>>>>>>>>>>\", post);\n    this.posts.unshift(post);\n  }\n\n  onUpdatedPost(post){\n    this.posts.forEach((curr,index) => {\n      console.log(\">>>>>>>>>index>>>>>>>>>>>>>>>>>>>>>>>>>\",index);\n      console.log(\">>>>>>>>>curr>>>>>>>>>>>>>>>>>>>>>>>>>\",curr);\n\n      if(post.id === curr.id){\n        console.log(\">>>>>>>>>Inside sss>>>>>>>>>>>>>>>>>>>>>>>>>\",this.posts);\n        this.posts.splice(index,1);\n        this.posts.unshift(post);\n        this.isEdited=false;\n        this.currentPost ={\n          id:\"0\",\n          title:'',\n          body:''\n        } \n             \n      }\n      \n    });\n  }\n\n\n  updateData(post) {\n    // console.log(\">>>>>The post value is>>>>>>\", post);\n    this.currentPost = post;\n    this.isEdited = true;\n  }\n\n  removePost(post){\n    this.postService.removePost(post.id).subscribe(data =>{\n      this.posts.forEach((curr,index) => {\n        if(post.id === curr.id){\n          this.posts.splice(index, 1);\n\n        }\n      })\n   \n  });\n\n}\n}\n","<app-postform [currentPost]=\"currentPost\" [isEdited] =\"isEdited\" (newPost)=\"onNewPost($event)\"\n(updatePostButton)=\"onUpdatedPost($event)\">\n    \n</app-postform>\n\n<div class=\"card\" *ngFor=\"let post of posts\" >\n    <div class=\"card-body\">\n        <h3><a routerLink=\"/posts/{{post.id}}\">{{post.title}}</a></h3>\n        <p>{{post.body}}</p>\n        <hr>\n        <button class=\"btn btn-danger\" (click)=\"removePost(post)\" ><i class=\"fa fa-remove\"></i></button>\n        <button class=\"btn btn-light\" (click)=\"updateData(post)\"><i class=\"fa fa-pencil\"></i></button>\n\n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { PostService } from '../../service/post.service';\n\n@Component({\n  selector: 'app-postform',\n  templateUrl: './postform.component.html',\n  styleUrls: ['./postform.component.css']\n})\nexport class PostformComponent implements OnInit {\n\n  constructor(private postservice : PostService) { }\n\n  @Output() newPost : EventEmitter<any> = new EventEmitter();\n  @Output() updatePostButton : EventEmitter<any> = new EventEmitter();\n  @Input() currentPost;\n  @Input() isEdited;\n\n  ngOnInit(): void {\n\n\n  }\n\n  addPost(title , body){\n    if(!title || !body ){\n      alert(\"Please enter the value\")\n    }\n    else{\n      this.postservice.savePost({title, body} ).subscribe\n      (post => {\n        // console.log(\">>post>>\", post);\n        this.newPost.emit(post);\n        this.currentPost ={\n          id:\"0\",\n          title:'',\n          body:''\n        } \n      })\n    }\n  }\n\n  updatePost(){\n    this.isEdited = false;\n    this.postservice.updatePost(this.currentPost).subscribe(data =>{\n      console.log(data,\">>>>>>>>data>>>>>>>>>>>>>>>>>>\");\n      this.updatePostButton.emit(data);\n    })\n  }\n\n}\n","<!-- <p>postform works!</p> -->\n<div class=\"card card-body\" >\n    <div class=\"form-group\">\n        <label>Title</label>\n        <input type=\"text\"   class=\"form-control\" [(ngModel)]=\"currentPost.title\"  #title> \n        \n    </div>\n    <div class=\"form-group\">\n        <label for=\"\">Body</label>\n        <input type=\"text\"  class=\"form-control\" [(ngModel)]=\"currentPost.body\" #body>\n        \n    </div>\n    <input type=\"hidden\"  name=\"id\" [(ngModel)]=\"currentPost.id\">\n    \n    <button *ngIf=\"!isEdited\" class=\"btn btn-primary mb-5\" (click)=\"addPost(title.value , body.value)\">Add</button>\n\n    <button *ngIf=\"isEdited\" class=\"btn btn-warning mb-5\" (click)=\"updatePost()\">Update</button>\n\n\n\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/module/user';\nimport { DataService } from '../../service/data.service';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-pratice-component',\n  templateUrl: './pratice-component.component.html',\n  styleUrls: ['./pratice-component.component.css'],\n})\nexport class PraticeComponentComponent implements OnInit {\n  users: User[];\n\n\n  //Pass the name of the form\n\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    age: null,\n    balance: null,\n  };\n  showExtended: boolean = false;\n  loaded: boolean = false;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form : any;\n\n  constructor( private dataService : DataService) {}\n\n  ngOnInit(): void {\n   \n      // this.dataService.getUsers();\n      this.dataService.getUsers().subscribe(users =>{\n        this.users = users;\n        console.log(\">>>>>>>>>>inside subscriber>>>>>>>>>>>>>>\",this.users);\n  });\n      this.dataService.getData().subscribe(data =>{\n        console.log(\">>>>>data>>>>>>>>>>>>>>>>>>>>\", data);\n      })\n\n    this.loaded = true;\n    // },2000)\n\n    this.newData({\n      firstName: 'aj',\n      lastName: 'anand',\n      email: 'ajayanand@gmailcom',\n      age: 23,\n      balance: 1000,\n      hide: true,\n    });\n  }\n\n  newData(user: User) {\n    this.users.push(user);\n  }\n\n  // addUser() {\n  //   this.user.hide = true;\n\n  //   this.users.unshift(this.user);\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  // }\n\n  clickEvent(e) {\n    console.log('The type of the event is ', e.type);\n  }\n\n  toogleValue(user: User) {\n    user.hide = !user.hide;\n    console.log('>>>>>>>>>>>>>>>>>>>useruseruser>>>>>>>>>>>', user.hide);\n  }\n  onSubmit({value , valid} : {value: User, valid: boolean}){\n    // if(!valid){\n      console.log(\"Form is not vaasaaaaaaaaaaaaaaaaalid\")\n    // }\n    // else{\n      this.user.hide = true;\n\n      this.users.unshift(value);\n      this.form.reset();\n    // }\n  }\n\n}\n","\n\n<div class=\"container\">\n    <button class=\"btn btn-dark mb-3\" (click)=\"showUserForm = !showUserForm\">\n        Add User\n    </button>\n    <div class=\"card card-body mb-2\" *ngIf=\"showUserForm\">\n        <h2>Add users</h2>\n        <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\" >\n            <div class=\"form-group\">\n                <label>First Name</label>\n                <input type=\"text\" name=\"firstName\" class=\"form-control \" [(ngModel)]=\"user.firstName\"\n                [ngClass]=\"{'is-invalid': userFirstName.errors && userFirstName.touched }\"\n                #userFirstName=\"ngModel\"\n                required\n                minlength=\"2\">\n                <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n                    First Name is Required\n                </div>\n                <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n                    minimum length is 2 characters!\n                </div>\n            </div>\n         \n            {{user.firstName}}\n            <div class=\"form-group\">\n                <label>Last Name</label>\n                <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"user.lastName\">\n            </div>\n            <div class=\"form-group\">\n                <label>Age</label>\n                <input type=\"number\" name=\"age\" class=\"form-control\" [(ngModel)]=\"user.age\">\n            </div>\n            <div class=\"form-group\">\n                <label>Balance</label>\n                <input type=\"number\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"user.balance\">\n            </div>\n            <div class=\"form-group\">\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" class=\"form-control\" \n                [(ngModel)]=\"user.email\"\n                [ngClass]=\"{'is-invalid': userEmail.errors && userEmail.touched }\"\n                #userEmail=\"ngModel\"\n                required \n                pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n                >\n                <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n                    Email is Required\n                </div>\n                <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n                    Invalid Email\n                </div>\n            </div>\n        <button [disabled]=\"!userForm.form.valid\"\n        class=\"btn btn-success\" >Add New User</button> \n    </form>\n\n    </div>\n  \n\n\n    <ul class=\"list-unstyled\">\n    <li class=\"card card-body mb-2\" *ngFor=\"let user of users\" [style.border-color]=\"user.hide ? 'green' : 'red' \">\n        <h3> {{user.firstName}} {{user.lastName}}</h3>\n        <small><button (click)=\"toogleValue(user)\" *ngIf=\"user.balance\">\n            <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i>\n        </button></small>\n        <ul class=\"list-group\" *ngIf=\"!user.hide && user.age \" >\n            <li class=\"list-group-item\">\n                Age: {{user.age}}  \n            </li>\n            <li class=\"list-group-item\">\n                Email: {{user.email}}\n            </li>\n            <li class=\"list-group-item\">\n                Balance: {{user.balance | currency:'INR' }} \n            </li>\n\n        </ul>\n\n    </li>\n\n</ul>\n</div>\n\n\n <!-- <button (click)=\"showUserForm = !showUserForm\" class=\"btn btn-dark mb-3\">Add User</button>\n <div class=\"card card-body mb-3\" *ngIf=\"showUserForm\">\n   <h2>Add User</h2>\n   <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n     <div class=\"form-group\">\n       <label>First Name</label>\n       <input \n         type=\"text\" \n         [(ngModel)]=\"user.firstName\" \n         [ngClass]=\"{'is-invalid':userFirstName.errors && userFirstName.touched}\"\n         class=\"form-control\" \n         name=\"firstName\"\n         #userFirstName=\"ngModel\"\n         required\n         minlength=\"2\"\n       >\n       <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n         First name required\n       </div>\n \n       <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n           Must be at least 2 characters\n       </div>\n     </div>\n     <div class=\"form-group\">\n       <label>Last Name</label>\n       <input \n         type=\"text\" \n         [(ngModel)]=\"user.lastName\" \n         [ngClass]=\"{'is-invalid':userLastName.errors && userLastName.touched}\"\n         class=\"form-control\" \n         name=\"lastName\"\n         #userLastName=\"ngModel\"\n         required\n         minlength=\"2\"\n       >\n       <div [hidden]=\"!userLastName.errors?.required\" class=\"invalid-feedback\">\n         Last name required\n       </div>\n \n       <div [hidden]=\"!userLastName.errors?.minlength\" class=\"invalid-feedback\">\n           Must be at least 2 characters\n       </div>\n     </div>\n     <div class=\"form-group\">\n       <label>Email</label>\n       <input \n       type=\"email\" \n       [(ngModel)]=\"user.email\" \n       [ngClass]=\"{'is-invalid':userEmail.errors && userEmail.touched}\"\n       class=\"form-control\" \n       name=\"email\"\n       #userEmail=\"ngModel\"\n       required\n       pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n     >\n     <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n       Email name required\n     </div>\n \n     <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n         Email is not valid\n     </div>\n     </div>\n \n     <button [disabled]=\"!userForm.form.valid\" class=\"btn btn-block mb-3\">Add New User</button>\n   </form>\n </div>\n <ul class=\"list-unstyled\" *ngIf=\"loaded && users?.length > 0\">\n   <li class=\"card card-body mb-2\" *ngFor=\"let user of users\" [class.bg-light]=\"user.isActive\">\n     <h3>{{ user.firstName }} {{ user.lastName }}\n       <small>\n         <button (click)=\"user.hide = !user.hide\" class=\"btn btn-dark btn-sm\">\n           <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i>\n         </button>\n       </small>\n     </h3>\n     <ul class=\"list-group\" *ngIf=\"!user.hide\">\n       <li class=\"list-group-item\">Emial: {{ user.email }}</li>\n       <li class=\"list-group-item\">Joined: {{ user.registered | date }}</li>\n     </ul>\n   </li>\n </ul>\n \n <h4 *ngIf=\"users?.length == 0\">No Users Found</h4>\n \n <h4 *ngIf=\"!loaded\">Loading Users...</h4> -->","import { Component, OnInit } from '@angular/core';\nimport {ObservableDataService } from '../../service/observable-data.service';\nimport { from } from 'rxjs';\nimport { User } from 'src/app/module/user';\n\n@Component({\n  selector: 'app-pratice-observable',\n  templateUrl: './pratice-observable.component.html',\n  styleUrls: ['./pratice-observable.component.css']\n})\nexport class PraticeObservableComponent implements OnInit {\n  users: User[];\n\n\n\n  constructor(private observeData : ObservableDataService) { }\n\n  // this.observeData.\n\n  ngOnInit(): void {\n    this.observeData.getUsers().subscribe(data =>{\n      this.users = data;\n      console.log(\">>>>>>>>>>inside subscriber>>>>>>>>>>>>>>\",this.users);\n    })\n\n  }\n\n}\n","<p>pratice-observable works!</p>\n\n\n<button class=\"btn btn-secondary\" routerLink=\"/form\">PreCondition</button>\n<button class=\"btn btn-dark\" routerLink=\"/post\">PostCondition</button>\n","import { Component } from '@angular/core';\r\n// import { User } from '../../module/user'\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl: './user.component.html',\r\n    styleUrls:['./user.component.css'],\r\n\r\n\r\n})\r\n\r\nexport class UserComponent {\r\n\r\n    enable : boolean = false;\r\n    myForm: FormGroup;\r\n\r\n\r\n    // user : User;\r\n    user;\r\n    // pushNewData;\r\n\r\n    data ={\r\n        firstName:\"\",\r\n    }\r\n\r\n    // dataCollection = [];\r\n\r\n    constructor() {\r\n        // this.pushNewData =[];\r\n\r\n        this.myForm = new FormGroup({\r\n            name: new FormControl('Benedict'),\r\n          });\r\n\r\n        this.user =[{\r\n        firstName:\"muthu\",\r\n        lastName:\"rave\",\r\n        email:\"muthurave@gmail.com\",\r\n        age:25,\r\n    }]\r\n    }\r\n\r\n    // adduser(){\r\n    //     let newData = this.user.push(this.data);\r\n    //     console.log(\">>>>newData>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",newData);\r\n    //     this.data ={\r\n    //         firstName:\"\",\r\n    //     }\r\n    // }\r\n\r\n    pushNewData =[];\r\n\r\n    addData(){\r\n        let updatedData = this.pushNewData.push(this.data);\r\n        console.log(\">>>>>>>>>>>>>>>updatedDataupdatedDataupdatedDataupdatedData>>>>>>>>>>>\",this.data)\r\n        this.data = {\r\n            firstName:\"\"\r\n        }\r\n        console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>pushNewDatapushNewDatapushNewData>>>>>>>>>>>>>>>>>>>\",this.pushNewData)\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        console.log('Valid?', form.valid); // true or false\r\n        console.log('Name', form.value.name);\r\n        console.log('Email', form.value.email);\r\n        console.log('Message', form.value.message);\r\n      }\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n    <button class=\"btn btn-primary mb-2\" (click)=\"enable = !enable\" >Add User</button>\r\n   \r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\">\r\n    <div class=\"input-box\" *ngIf=\"enable\">\r\n        <label>Enter Name</label>\r\n        <input type=\"text\" formControlName=\"name\"  class=\"form-control\" [(ngModel)] =\"data.firstName\">\r\n        <!-- {{data.firstName}} -->\r\n        <button class=\"btn btn-success mb2\" (click) =\"addData()\" id=\"successbtn\">Save</button>\r\n    </div>\r\n    </form>\r\n    <div *ngFor = \"let user of pushNewData\" class=\"data-enter\" >{{user.firstName}}</div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  registeredForm: FormGroup;\n\n  constructor(private formbuilder : FormBuilder) { }\n\n   validate= false;\n\n\n  ngOnInit(): void {\n    this.registeredForm = this.formbuilder.group({\n      name: ['', Validators.required],\n  \n    });  \n  }\n\n  add() {\n    this.validate= true;\n  }\n\n}\n","\n<form [formGroup]=\"registeredForm\" (ngSubmit)=\"add()\">\n\n<div class=\"formgroup\" >\n    <label>Enter Name</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\"> \n    <app-validation [control]=\"registeredForm.controls.name\" [submit]=\"validate\"></app-validation>\n</div>\n<button class=\"btn btn-success\">Confirm</button>\n</form>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './validation.component.html',\n  styleUrls: ['./validation.component.css']\n})\nexport class ValidationComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() control;\n  @Input() submit;\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<span *ngIf= \" ( control.touched  ||  submit)\">\n<small  *ngIf=\"control.errors?.required\">Name Required !</small>\n\n</span>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-id-generate',\n  templateUrl: './id-generate.component.html',\n  styleUrls: ['./id-generate.component.css']\n})\nexport class IdGenerateComponent implements OnInit {\n\n  newData;\n\n  constructor(\n    private route : ActivatedRoute,\n    private postservice : PostService\n  ) { }\n\n  ngOnInit(): void {\n   const id = this.route.snapshot.paramMap.get('id');\n   this.postservice.getPostById(id).subscribe(data =>{\n    this.newData = data;\n    console.log(\">>>>>>>The New data is>>>>>>>\",this.newData);\n   } );\n  }\n\n}\n","<p>id-generate works!</p>\n\n\n<button class=\"btn-dark\" routerLink =\"/post\">Return To Post</button>\n\n<div class=\"card\">\n        <div class=\"card-body\" *ngIf=\"newData\">\n        <!-- *ngFor = \"let apiData of newData\" -->\n        {{newData.title}}\n        <!-- <p>id-generate works!</p>\n\n<p>id-generate works!</p> -->\n\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { User } from '../module/user';\nimport { Observable , of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\nusers: User[];\ndata: Observable <any>;\n\n  constructor() { \n\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n  }\n\n  getData(){\n    this.data = new Observable( observer =>{\n      setTimeout(()=>{\n        observer.next(1);\n      },1000);\n      setTimeout(()=>{\n        observer.next(2);\n      },2000);\n      setTimeout(()=>{\n        observer.next(3);\n      },3000);\n      setTimeout(()=>{\n        observer.next({name:\"muthu\"});\n      },4000);\n    })\n    return this.data;\n  }\n\n  getUsers():Observable<User[]> { \n    console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n    return of(this.users);\n  }\n\n  // getUsers():User[] { \n  //   console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n  //   return this.users;\n  // }\n\n\n\n  addUser(user:User) {  \n    // this.user.hide = true;\n\n    this.users.unshift(user);\n    console.log(\"It is now unshifting the value>>>>>>>>>>>>>>>>>>>>>>>>>\")\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../module/user';\nimport { Observable , of, Observer } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObservableDataService {\n\n  users: User[];\n  data: Observable <any>;\n\n  constructor() { \n\n\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n  }\n\n\n  // getDummyData():Observable<any>{\n  //   // return of(this.newData);\n  // }\n\n  getData(){\n    this.data = new Observable( observer =>{\n      setTimeout(()=>{\n        observer.next(1);\n      },1000);\n      setTimeout(()=>{\n        observer.next(2);\n      },2000);\n      setTimeout(()=>{\n        observer.next(3);\n      },3000);\n      setTimeout(()=>{\n        observer.next(4);\n      },4000);\n    })\n    return this.data;\n  }\n\n  // Normal \n  // getUsers():User[] { \n  //   console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n  //   return this.users;\n  // }\n\n  // Using Observable\n  getUsers():Observable<User[]> { \n    console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n    return of(this.users);\n  }\n\n  \n}","import { Injectable } from '@angular/core';\nimport { PostUser } from '../module/post.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\n\n\nconst httpOption = {\n  headers: new HttpHeaders({'Content-Type'  : 'application/json'})\n };\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n \n  postUrl : string = \"https://jsonplaceholder.typicode.com/posts\";\n\n  constructor(private http : HttpClient) { }\n\n    getPosts() : Observable<PostUser[]> { //<PostUser[]>\n      return this.http.get<any>(this.postUrl);\n    }\n\n    savePost(post): Observable<any>{\n      return this.http.post<any>(this.postUrl,post,httpOption);\n    }\n\n    updatePost(post): Observable<any> {\n       const url = `${this.postUrl}/${post.id}`;\n       return this.http.put<any>(url,post); \n    }\n\n    removePost(post): Observable<any>{\n      const id = typeof post === 'number' ? post : post.id;\n      const url = `${this.postUrl}/${id}`;\n      return this.http.delete<any>(url); \n\n    }\n\n    getPostById(id) : Observable<any> { \n      const url = `${this.postUrl}/${id}`;\n      console.log(\"The url is >>>>>>>>>>>>>>>>>>>>>>.\",url);\n      return this.http.get<any>(url);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}