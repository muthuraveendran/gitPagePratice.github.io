{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/forms/app-validation/app-validation.component.ts","webpack:///src/app/components/forms/app-validation/app-validation.component.html","webpack:///src/app/components/forms/pratice-form/pratice-form.component.ts","webpack:///src/app/components/forms/pratice-form/pratice-form.component.html","webpack:///src/app/components/forms/reactive-form/reactive-form.component.ts","webpack:///src/app/components/forms/reactive-form/reactive-form.component.html","webpack:///src/app/components/forms/template-driven/template-driven.component.ts","webpack:///src/app/components/forms/template-driven/template-driven.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/post/post.component.ts","webpack:///src/app/components/post/post.component.html","webpack:///src/app/components/postform/postform.component.ts","webpack:///src/app/components/postform/postform.component.html","webpack:///src/app/components/pratice-component/pratice-component.component.ts","webpack:///src/app/components/pratice-component/pratice-component.component.html","webpack:///src/app/components/pratice-observable/pratice-observable.component.ts","webpack:///src/app/components/pratice-observable/pratice-observable.component.html","webpack:///src/app/components/users/user.component.ts","webpack:///src/app/components/users/user.component.html","webpack:///src/app/dummy/form/form.component.ts","webpack:///src/app/dummy/form/form.component.html","webpack:///src/app/dummy/validation/validation.component.ts","webpack:///src/app/dummy/validation/validation.component.html","webpack:///src/app/id-generate/id-generate.component.ts","webpack:///src/app/id-generate/id-generate.component.html","webpack:///src/app/service/data.service.ts","webpack:///src/app/service/observable-data.service.ts","webpack:///src/app/service/post.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AppValidationComponent","PraticeFormComponent","fb","submitted","registeredForm","group","name","required","minLength","formValidation","ReactiveFormComponent","formBuilder","show","data","firstName","arrayData","registrationForm","valid","push","controls","TemplateDrivenComponent","user","lastName","email","age","balance","showExtended","loaded","showUserForm","users","registerd","Date","hide","newData","console","log","type","value","unshift","form","reset","onSubmit","NavbarComponent","AddButton","greenButton","color","currentClasses","colorChange","setCurrentClasses","randomColorChanger","proffession","valueChane","PageNotFoundComponent","PostComponent","postService","currentPost","body","isEdited","getPosts","subscribe","postdata","posts","post","forEach","curr","index","splice","removePost","onNewPost","onUpdatedPost","PostformComponent","postservice","newPost","updatePostButton","alert","savePost","emit","updatePost","PraticeComponentComponent","dataService","getUsers","getData","PraticeObservableComponent","observeData","UserComponent","enable","pushNewData","myForm","updatedData","message","FormComponent","formbuilder","validate","add","ValidationComponent","IdGenerateComponent","route","snapshot","paramMap","get","getPostById","DataService","observer","setTimeout","next","providedIn","ObservableDataService","httpOption","headers","PostService","http","postUrl","url","put","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PraticeObservableComponent } from '../components/pratice-observable/pratice-observable.component';\nimport { ReactiveFormComponent } from '../components/forms/reactive-form/reactive-form.component';\nimport { PostComponent } from '../components/post/post.component';\nimport { IdGenerateComponent } from '../id-generate/id-generate.component';\nimport { PageNotFoundComponent } from '../components/page-not-found/page-not-found.component';\n\nconst routes : Routes = [\n  {path:\"\", component:PraticeObservableComponent},\n  {path:\"form\", component:ReactiveFormComponent},\n  {path:\"post\", component:PostComponent},\n  {path:\"posts/:id\",component:IdGenerateComponent},\n  {path:\"**\",component:PageNotFoundComponent},\n];\n\n@NgModule({\n  exports:[RouterModule],\n  imports: [\n    RouterModule.forRoot(routes)\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'praticeAngular';\n}\n","<!-- <p>Welecome to Angular</p> -->\n<!-- <app-user></app-user> -->\n<!-- <app-navbar></app-navbar> -->\n<!-- <app-pratice-component></app-pratice-component> -->\n<!-- <app-template-driven></app-template-driven> -->\n\n<!-- <app-reactive-form></app-reactive-form> -->\n\n<!-- <app-pratice-form></app-pratice-form> -->\n\n<!-- <app-form></app-form> -->\n\n<!-- <app-pratice-observable></app-pratice-observable> -->\n<!-- <app-post></app-post> -->\n<nav class=\"navbar navbar-light\" style=\"background-color: #e3f2fd;\">\n    <a class=\"navbar-brand\" routerLink=\"/\" [routerLinkActive]=\"['active']\" style = \"color:green\">Home</a>\n    <a class=\"navbar-brand\" routerLink=\"/form\" [routerLinkActive]=\"['active']\" style = \"color:green\" >Pre</a>\n    <a class=\"navbar-brand\" routerLink=\"/post\" [routerLinkActive]=\"['active']\" style = \"color:green\" >Post</a>\n  </nav>\n  asasas\n  <!-- <i class=\"fab fa-accessible-icon\"></i> -->\n  <!-- <i class=\"fa fa-adversal\"></i>\n  <i class=\"fa fa-address-card\"></i> -->\n  <!-- <i class=\"fa fa-biking\"></i> -->\n  <!-- <i class=\"fa fa-address-book\"></i> -->\n  <!-- <i class=\"fa fa-album\"></i> -->\n  <i class=\"fa fa-plus\"></i>\n  <i class=\"fa fa-plus-square\"></i>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserComponent } from './components/users/user.component';\nimport { PraticeComponentComponent } from './components/pratice-component/pratice-component.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { from } from 'rxjs';\nimport { TemplateDrivenComponent } from './components/forms/template-driven/template-driven.component';\nimport { ReactiveFormComponent } from './components/forms/reactive-form/reactive-form.component';\nimport { PraticeFormComponent } from './components/forms/pratice-form/pratice-form.component';\nimport { AppValidationComponent } from './components/forms/app-validation/app-validation.component';\nimport { FormComponent } from './dummy/form/form.component';\nimport { ValidationComponent } from './dummy/validation/validation.component';\nimport { PraticeObservableComponent } from './components/pratice-observable/pratice-observable.component';\nimport { PostComponent } from './components/post/post.component';\nimport { PostformComponent } from './components/postform/postform.component';\nimport { AppRoutingModule } from \"./app-routing/app-routing.module\";\nimport { IdGenerateComponent } from './id-generate/id-generate.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    PraticeComponentComponent,\n    NavbarComponent,\n    TemplateDrivenComponent,\n    ReactiveFormComponent,\n    PraticeFormComponent,\n    AppValidationComponent,\n    FormComponent,\n    ValidationComponent,\n    PraticeObservableComponent,\n    PostComponent,\n    PostformComponent,\n    IdGenerateComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n ","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-app-validation',\n  templateUrl: './app-validation.component.html',\n  styleUrls: ['./app-validation.component.css']\n})\nexport class AppValidationComponent implements OnInit {\n\n  @Input() control;\n  @Input() submitted1;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>app-validation works!</p> -->\n\n{{submitted1}} >>>>>>>>>>>\n\n<div *ngIf= \" ( control.touched  ||  submitted1)\" class=\"text-danger\">\n    <small *ngIf=\"control.errors?.required\" class=\"form-text\" >Required Field</small>\n    <small *ngIf=\"control.errors.minlength\" class=\"form-text\" >Password is to short</small>\n    <small *ngIf=\"control.errors.email\" class=\"form-text\" >Enter valid email address</small>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-pratice-form',\n  templateUrl: './pratice-form.component.html',\n  styleUrls: ['./pratice-form.component.css']\n})\nexport class PraticeFormComponent implements OnInit {\n\n  registeredForm : FormGroup;\n  submitted: boolean =false\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registeredForm = this.fb.group({\n      name:[\"\",[Validators.required,Validators.minLength]]\n    })\n  }\n\n  formValidation(){\n    this.submitted = true;\n  }\n\n}\n","<div class=\"form-container\">\r\n\r\n    <form [formGroup]=\"registeredForm\" (ngSubmit)=\"formValidation()\">\r\n        <label>Enter Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n\r\n    <app-app-validation [control]=\"registeredForm.controls.name\" [submitted1]=\"submitted\"> </app-app-validation>\r\n<div class=\"submit\">\r\n            <button class=\"btn btn-success mb-2\">Submit</button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.css']\n})\nexport class ReactiveFormComponent implements OnInit {\n\n  show : boolean = true;\n    submitted = false;\n  registrationForm: FormGroup;\n\n  data = {\n    firstName:\"\"\n  }\n\n  arrayData =[];\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.registrationForm = this.formBuilder.group({\n    \n            name: [\"\", [Validators.required, Validators.minLength(6)]],\n\n          });\n  }\n  get f() { return this.registrationForm.controls; }\n\n\n      submitRegistrationForm() {\n        this.submitted = true;\n        if (this.registrationForm.valid) {\n          this.arrayData.push(this.data);\n        }\n      }\n\n}\n","<div class=\"container\">\n    <button class=\"btn btn-primary mb-2\" (click)=\"show = !show\">Add User</button>\n    <div class=\"formName\" *ngIf=\"show\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"submitRegistrationForm()\">\n            <label>Enter Name</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"data.firstName\" formControlName=\"name\">\n            \n            <span class=\"text-danger\"\n                *ngIf=\"(registrationForm.controls.name.touched || submitted) && registrationForm.controls.name.errors?.required\">\n                Name is required\n            </span>\n\n          \n\n            <!-- <span class=\"text-danger\"\n                *ngIf=\"(registrationForm.controls.name.touched || submitted) && registrationForm.controls.name.errors?.minlength\">\n                minimum 6 character\n            </span> -->\n\n            <button class=\"btn btn-success mb-2\">Add</button>\n        </form>\n    </div>\n    <div *ngFor=\"let data of arrayData\" class=\"text-display\"> {{data.firstName}}</div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/module/user';\n\n@Component({\n  selector: 'app-template-driven',\n  templateUrl: './template-driven.component.html',\n  styleUrls: ['./template-driven.component.css']\n})\nexport class TemplateDrivenComponent implements OnInit {\n\n  users: User[];\n\n\n  //Pass the name of the form\n\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    age: null,\n    balance: null,\n  };\n  showExtended: boolean = false;\n  loaded: boolean = false;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form : any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // setTimeout(()=>{\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n    this.loaded = true;\n    // },2000)\n\n    this.newData({\n      firstName: 'aj',\n      lastName: 'anand',\n      email: 'ajayanand@gmailcom',\n      age: 23,\n      balance: 1000,\n      hide: true,\n    });\n  }\n\n  newData(user: User) {\n    this.users.push(user);\n  }\n\n  // addUser() {\n  //   this.user.hide = true;\n\n  //   this.users.unshift(this.user);\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  // }\n\n  clickEvent(e) {\n    console.log('The type of the event is ', e.type);\n  }\n\n  toogleValue(user: User) {\n    user.hide = !user.hide;\n    console.log('>>>>>>>>>>>>>>>>>>>useruseruser>>>>>>>>>>>', user.hide);\n  }\n  onSubmit({value , valid} : {value: User, valid: boolean}){\n    // if(!valid){\n      console.log(\"Form is not vaasaaaaaaaaaaaaaaaaalid\")\n    // }\n    // else{\n      this.user.hide = true;\n\n      this.users.unshift(value);\n      this.form.reset();\n    // }\n  }\n}\n","<form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\" >\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type=\"text\" name=\"firstName\" class=\"form-control \" [(ngModel)]=\"user.firstName\"\n        [ngClass]=\"{'is-invalid': userFirstName.errors && userFirstName.touched }\"\n        #userFirstName=\"ngModel\"\n        required\n        minlength=\"2\">\n        <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n            First Name is Required\n        </div>\n        <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n            minimum length is 2 characters!\n        </div>\n    </div>\n \n    {{user.firstName}}\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"user.lastName\">\n    </div>\n    <div class=\"form-group\">\n        <label>Age</label>\n        <input type=\"number\" name=\"age\" class=\"form-control\" [(ngModel)]=\"user.age\">\n    </div>\n    <div class=\"form-group\">\n        <label>Balance</label>\n        <input type=\"number\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"user.balance\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" name=\"email\" class=\"form-control\" \n        [(ngModel)]=\"user.email\"\n        [ngClass]=\"{'is-invalid': userEmail.errors && userEmail.touched }\"\n        #userEmail=\"ngModel\"\n        required \n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n        >\n        <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n            Email is Required\n        </div>\n        <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n            Invalid Email\n        </div>\n    </div>\n<button [disabled]=\"!userForm.form.valid\"\nclass=\"btn btn-success\" >Add New User</button> \n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\nusers;\n\n  constructor() { \n    this.setCurrentClasses(); \n    this.randomColorChanger();\n\n  }\n\n  AddButton : boolean = true;\n  greenButton : boolean = true;\n  // colorChange : boolean = true;\n  color: boolean = true;\n  currentClasses = {};\n  colorChange = {};\n\n  ngOnInit(): void {\n\n    this.users={\n      name:\"muthu\",\n      age:24,\n      proffession:\"Developer\",\n      hide:true,\n    }\n  }\n\n  setCurrentClasses() {\n    this.currentClasses ={\n      'btn-success':this.AddButton,\n      'big-text': this.greenButton\n    }\n  }\n\n  randomColorChanger(){\n    this.colorChange ={\n      // 'grenBtn':this.greenButton,\n      // 'redBtn':this.greenButton\n    }\n  }\n\n  valueChane(){\n    this.users.hide = !this.users.hide;\n  }\n}\n","<!-- <nav class=\"navbar navbar-dark bg-primary mb-4\">\n    <div class=\"container\">\n        <a href=\"#\" class=\"navbar-brand\">Angular APP</a>\n    </div>\n</nav>\n{{currentClassesbtn-sucess}}\n<button [disabled]=\"!AddButton\" [ngClass]=\"currentClasses\">Add New User</button>\n\n\n<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n      <div class=\"col-sm\">\n        One of three columns\n      </div>\n    </div>\n  </div> -->\n\n\n\n  <!-- <h2>Users</h2> -->\n  \n  <!-- <ul class=\"list-unstyled\"> -->\n <!-- <li  [style.color]=\"colorChange ? 'red' : '' \" >{{users.age}}</li> -->\n\n <!-- <button [ngClass]=\"colorChange\" [style.border-color]=\"colorChange\">ADD ME!!!</button> -->\n\n      <!-- <li class=\"card card-body md-2\" [style.border-color]=\"colorChange\" >{{users.name}}</li> -->\n      <!-- {{colorChange.grenBtn}} -->\n      <!-- <li class=\"card card-body md-2\" [style.border-color]=\"colorChange ? 'green' : '' \" >{{users.age}}</li> -->\n  <!-- </ul> -->\n  <!-- <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i> -->\n  <i [ngClass]=\"'fa fa-plus'\" (click) =\"valueChane()\"></i> <br>\n\n<span *ngIf=\"!users.hide\"> >>>>>>>>>>>>.asdjashdsaoj>>>>>>>>>>>>>>> {{users.name}}</span>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>404 Page Not Found</p>\n","import { Component, OnInit } from '@angular/core';\nimport { PostUser } from 'src/app/module/post.service';\nimport { PostService } from '../../service/post.service'\nimport { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  constructor(private postService : PostService) { }\n\n  posts  : PostUser[];\n\n  currentPost = {\n    id:\"0\",\n    title:\"\",\n    body:\"\"\n  }\n\n  isEdited : boolean = false;\n\n  // currentPost;\n\n  ngOnInit(): void {\n    this.postService.getPosts().subscribe( postdata =>{\n\n      console.log(postdata);\n      this.posts = postdata;\n\n    })\n  }\n\n  onNewPost(post) {\n    // console.log(\">>>>>>>>>>>post>>>>>>>>>>>>>>>>>\", post);\n    this.posts.unshift(post);\n  }\n\n  onUpdatedPost(post){\n    this.posts.forEach((curr,index) => {\n      console.log(\">>>>>>>>>index>>>>>>>>>>>>>>>>>>>>>>>>>\",index);\n      console.log(\">>>>>>>>>curr>>>>>>>>>>>>>>>>>>>>>>>>>\",curr);\n\n      if(post.id === curr.id){\n        console.log(\">>>>>>>>>Inside sss>>>>>>>>>>>>>>>>>>>>>>>>>\",this.posts);\n        this.posts.splice(index,1);\n        this.posts.unshift(post);\n        this.isEdited=false;\n        this.currentPost ={\n          id:\"0\",\n          title:'',\n          body:''\n        } \n             \n      }\n      \n    });\n  }\n\n\n  updateData(post) {\n    // console.log(\">>>>>The post value is>>>>>>\", post);\n    this.currentPost = post;\n    this.isEdited = true;\n  }\n\n  removePost(post){\n    this.postService.removePost(post.id).subscribe(data =>{\n      this.posts.forEach((curr,index) => {\n        if(post.id === curr.id){\n          this.posts.splice(index, 1);\n\n        }\n      })\n   \n  });\n\n}\n}\n","<app-postform [currentPost]=\"currentPost\" [isEdited] =\"isEdited\" (newPost)=\"onNewPost($event)\"\n(updatePostButton)=\"onUpdatedPost($event)\">\n    \n</app-postform>\n\n<div class=\"card\" *ngFor=\"let post of posts\" >\n    <div class=\"card-body\">\n        <h3><a routerLink=\"/posts/{{post.id}}\">{{post.title}}</a></h3>\n        <p>{{post.body}}</p>\n        <hr>\n        <button class=\"btn btn-danger\" (click)=\"removePost(post)\" ><i class=\"fa fa-remove\"></i></button>\n        <button class=\"btn btn-light\" (click)=\"updateData(post)\"><i class=\"fa fa-pencil\"></i></button>\n\n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { PostService } from '../../service/post.service';\n\n@Component({\n  selector: 'app-postform',\n  templateUrl: './postform.component.html',\n  styleUrls: ['./postform.component.css']\n})\nexport class PostformComponent implements OnInit {\n\n  constructor(private postservice : PostService) { }\n\n  @Output() newPost : EventEmitter<any> = new EventEmitter();\n  @Output() updatePostButton : EventEmitter<any> = new EventEmitter();\n  @Input() currentPost;\n  @Input() isEdited;\n\n  ngOnInit(): void {\n\n\n  }\n\n  addPost(title , body){\n    if(!title || !body ){\n      alert(\"Please enter the value\")\n    }\n    else{\n      this.postservice.savePost({title, body} ).subscribe\n      (post => {\n        // console.log(\">>post>>\", post);\n        this.newPost.emit(post);\n        this.currentPost ={\n          id:\"0\",\n          title:'',\n          body:''\n        } \n      })\n    }\n  }\n\n  updatePost(){\n    this.isEdited = false;\n    this.postservice.updatePost(this.currentPost).subscribe(data =>{\n      console.log(data,\">>>>>>>>data>>>>>>>>>>>>>>>>>>\");\n      this.updatePostButton.emit(data);\n    })\n  }\n\n}\n","<!-- <p>postform works!</p> -->\n<div class=\"card card-body\" >\n    <div class=\"form-group\">\n        <label>Title</label>\n        <input type=\"text\"   class=\"form-control\" [(ngModel)]=\"currentPost.title\"  #title> \n        \n    </div>\n    <div class=\"form-group\">\n        <label for=\"\">Body</label>\n        <input type=\"text\"  class=\"form-control\" [(ngModel)]=\"currentPost.body\" #body>\n        \n    </div>\n    <input type=\"hidden\"  name=\"id\" [(ngModel)]=\"currentPost.id\">\n    \n    <button *ngIf=\"!isEdited\" class=\"btn btn-primary mb-5\" (click)=\"addPost(title.value , body.value)\">Add</button>\n\n    <button *ngIf=\"isEdited\" class=\"btn btn-warning mb-5\" (click)=\"updatePost()\">Update</button>\n\n\n\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/module/user';\nimport { DataService } from '../../service/data.service';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-pratice-component',\n  templateUrl: './pratice-component.component.html',\n  styleUrls: ['./pratice-component.component.css'],\n})\nexport class PraticeComponentComponent implements OnInit {\n  users: User[];\n\n\n  //Pass the name of the form\n\n  user: User = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    age: null,\n    balance: null,\n  };\n  showExtended: boolean = false;\n  loaded: boolean = false;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form : any;\n\n  constructor( private dataService : DataService) {}\n\n  ngOnInit(): void {\n   \n      // this.dataService.getUsers();\n      this.dataService.getUsers().subscribe(users =>{\n        this.users = users;\n        console.log(\">>>>>>>>>>inside subscriber>>>>>>>>>>>>>>\",this.users);\n  });\n      this.dataService.getData().subscribe(data =>{\n        console.log(\">>>>>data>>>>>>>>>>>>>>>>>>>>\", data);\n      })\n\n    this.loaded = true;\n    // },2000)\n\n    this.newData({\n      firstName: 'aj',\n      lastName: 'anand',\n      email: 'ajayanand@gmailcom',\n      age: 23,\n      balance: 1000,\n      hide: true,\n    });\n  }\n\n  newData(user: User) {\n    this.users.push(user);\n  }\n\n  // addUser() {\n  //   this.user.hide = true;\n\n  //   this.users.unshift(this.user);\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  // }\n\n  clickEvent(e) {\n    console.log('The type of the event is ', e.type);\n  }\n\n  toogleValue(user: User) {\n    user.hide = !user.hide;\n    console.log('>>>>>>>>>>>>>>>>>>>useruseruser>>>>>>>>>>>', user.hide);\n  }\n  onSubmit({value , valid} : {value: User, valid: boolean}){\n    // if(!valid){\n      console.log(\"Form is not vaasaaaaaaaaaaaaaaaaalid\")\n    // }\n    // else{\n      this.user.hide = true;\n\n      this.users.unshift(value);\n      this.form.reset();\n    // }\n  }\n\n}\n","\n\n<div class=\"container\">\n    <button class=\"btn btn-dark mb-3\" (click)=\"showUserForm = !showUserForm\">\n        Add User\n    </button>\n    <div class=\"card card-body mb-2\" *ngIf=\"showUserForm\">\n        <h2>Add users</h2>\n        <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\" >\n            <div class=\"form-group\">\n                <label>First Name</label>\n                <input type=\"text\" name=\"firstName\" class=\"form-control \" [(ngModel)]=\"user.firstName\"\n                [ngClass]=\"{'is-invalid': userFirstName.errors && userFirstName.touched }\"\n                #userFirstName=\"ngModel\"\n                required\n                minlength=\"2\">\n                <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n                    First Name is Required\n                </div>\n                <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n                    minimum length is 2 characters!\n                </div>\n            </div>\n         \n            {{user.firstName}}\n            <div class=\"form-group\">\n                <label>Last Name</label>\n                <input type=\"text\" name=\"lastName\" class=\"form-control\" [(ngModel)]=\"user.lastName\">\n            </div>\n            <div class=\"form-group\">\n                <label>Age</label>\n                <input type=\"number\" name=\"age\" class=\"form-control\" [(ngModel)]=\"user.age\">\n            </div>\n            <div class=\"form-group\">\n                <label>Balance</label>\n                <input type=\"number\" name=\"balance\" class=\"form-control\" [(ngModel)]=\"user.balance\">\n            </div>\n            <div class=\"form-group\">\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" class=\"form-control\" \n                [(ngModel)]=\"user.email\"\n                [ngClass]=\"{'is-invalid': userEmail.errors && userEmail.touched }\"\n                #userEmail=\"ngModel\"\n                required \n                pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n                >\n                <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n                    Email is Required\n                </div>\n                <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n                    Invalid Email\n                </div>\n            </div>\n        <button [disabled]=\"!userForm.form.valid\"\n        class=\"btn btn-success\" >Add New User</button> \n    </form>\n\n    </div>\n  \n\n\n    <ul class=\"list-unstyled\">\n    <li class=\"card card-body mb-2\" *ngFor=\"let user of users\" [style.border-color]=\"user.hide ? 'green' : 'red' \">\n        <h3> {{user.firstName}} {{user.lastName}}</h3>\n        <small><button (click)=\"toogleValue(user)\" *ngIf=\"user.balance\">\n            <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i>\n        </button></small>\n        <ul class=\"list-group\" *ngIf=\"!user.hide && user.age \" >\n            <li class=\"list-group-item\">\n                Age: {{user.age}}  \n            </li>\n            <li class=\"list-group-item\">\n                Email: {{user.email}}\n            </li>\n            <li class=\"list-group-item\">\n                Balance: {{user.balance | currency:'INR' }} \n            </li>\n\n        </ul>\n\n    </li>\n\n</ul>\n</div>\n\n\n <!-- <button (click)=\"showUserForm = !showUserForm\" class=\"btn btn-dark mb-3\">Add User</button>\n <div class=\"card card-body mb-3\" *ngIf=\"showUserForm\">\n   <h2>Add User</h2>\n   <form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n     <div class=\"form-group\">\n       <label>First Name</label>\n       <input \n         type=\"text\" \n         [(ngModel)]=\"user.firstName\" \n         [ngClass]=\"{'is-invalid':userFirstName.errors && userFirstName.touched}\"\n         class=\"form-control\" \n         name=\"firstName\"\n         #userFirstName=\"ngModel\"\n         required\n         minlength=\"2\"\n       >\n       <div [hidden]=\"!userFirstName.errors?.required\" class=\"invalid-feedback\">\n         First name required\n       </div>\n \n       <div [hidden]=\"!userFirstName.errors?.minlength\" class=\"invalid-feedback\">\n           Must be at least 2 characters\n       </div>\n     </div>\n     <div class=\"form-group\">\n       <label>Last Name</label>\n       <input \n         type=\"text\" \n         [(ngModel)]=\"user.lastName\" \n         [ngClass]=\"{'is-invalid':userLastName.errors && userLastName.touched}\"\n         class=\"form-control\" \n         name=\"lastName\"\n         #userLastName=\"ngModel\"\n         required\n         minlength=\"2\"\n       >\n       <div [hidden]=\"!userLastName.errors?.required\" class=\"invalid-feedback\">\n         Last name required\n       </div>\n \n       <div [hidden]=\"!userLastName.errors?.minlength\" class=\"invalid-feedback\">\n           Must be at least 2 characters\n       </div>\n     </div>\n     <div class=\"form-group\">\n       <label>Email</label>\n       <input \n       type=\"email\" \n       [(ngModel)]=\"user.email\" \n       [ngClass]=\"{'is-invalid':userEmail.errors && userEmail.touched}\"\n       class=\"form-control\" \n       name=\"email\"\n       #userEmail=\"ngModel\"\n       required\n       pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n     >\n     <div [hidden]=\"!userEmail.errors?.required\" class=\"invalid-feedback\">\n       Email name required\n     </div>\n \n     <div [hidden]=\"!userEmail.errors?.pattern\" class=\"invalid-feedback\">\n         Email is not valid\n     </div>\n     </div>\n \n     <button [disabled]=\"!userForm.form.valid\" class=\"btn btn-block mb-3\">Add New User</button>\n   </form>\n </div>\n <ul class=\"list-unstyled\" *ngIf=\"loaded && users?.length > 0\">\n   <li class=\"card card-body mb-2\" *ngFor=\"let user of users\" [class.bg-light]=\"user.isActive\">\n     <h3>{{ user.firstName }} {{ user.lastName }}\n       <small>\n         <button (click)=\"user.hide = !user.hide\" class=\"btn btn-dark btn-sm\">\n           <i [ngClass]=\"user.hide ? 'fa fa-plus' : 'fa fa-minus'\"></i>\n         </button>\n       </small>\n     </h3>\n     <ul class=\"list-group\" *ngIf=\"!user.hide\">\n       <li class=\"list-group-item\">Emial: {{ user.email }}</li>\n       <li class=\"list-group-item\">Joined: {{ user.registered | date }}</li>\n     </ul>\n   </li>\n </ul>\n \n <h4 *ngIf=\"users?.length == 0\">No Users Found</h4>\n \n <h4 *ngIf=\"!loaded\">Loading Users...</h4> -->","import { Component, OnInit } from '@angular/core';\nimport {ObservableDataService } from '../../service/observable-data.service';\nimport { from } from 'rxjs';\nimport { User } from 'src/app/module/user';\n\n@Component({\n  selector: 'app-pratice-observable',\n  templateUrl: './pratice-observable.component.html',\n  styleUrls: ['./pratice-observable.component.css']\n})\nexport class PraticeObservableComponent implements OnInit {\n  users: User[];\n\n\n\n  constructor(private observeData : ObservableDataService) { }\n\n  // this.observeData.\n\n  ngOnInit(): void {\n    this.observeData.getUsers().subscribe(data =>{\n      this.users = data;\n      console.log(\">>>>>>>>>>inside subscriber>>>>>>>>>>>>>>\",this.users);\n    })\n\n  }\n\n}\n","<p>pratice-observable works!</p>\n\n\n<button class=\"btn btn-secondary\" routerLink=\"/form\">PreCondition</button>\n<button class=\"btn btn-dark\" routerLink=\"/post\">PostCondition</button>\n","import { Component } from '@angular/core';\r\n// import { User } from '../../module/user'\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-user',\r\n    templateUrl: './user.component.html',\r\n    styleUrls:['./user.component.css'],\r\n\r\n\r\n})\r\n\r\nexport class UserComponent {\r\n\r\n    enable : boolean = false;\r\n    myForm: FormGroup;\r\n\r\n\r\n    // user : User;\r\n    user;\r\n    // pushNewData;\r\n\r\n    data ={\r\n        firstName:\"\",\r\n    }\r\n\r\n    // dataCollection = [];\r\n\r\n    constructor() {\r\n        // this.pushNewData =[];\r\n\r\n        this.myForm = new FormGroup({\r\n            name: new FormControl('Benedict'),\r\n          });\r\n\r\n        this.user =[{\r\n        firstName:\"muthu\",\r\n        lastName:\"rave\",\r\n        email:\"muthurave@gmail.com\",\r\n        age:25,\r\n    }]\r\n    }\r\n\r\n    // adduser(){\r\n    //     let newData = this.user.push(this.data);\r\n    //     console.log(\">>>>newData>>>>>>>>>>>>>>>>>>>>>>>>>>>>\",newData);\r\n    //     this.data ={\r\n    //         firstName:\"\",\r\n    //     }\r\n    // }\r\n\r\n    pushNewData =[];\r\n\r\n    addData(){\r\n        let updatedData = this.pushNewData.push(this.data);\r\n        console.log(\">>>>>>>>>>>>>>>updatedDataupdatedDataupdatedDataupdatedData>>>>>>>>>>>\",this.data)\r\n        this.data = {\r\n            firstName:\"\"\r\n        }\r\n        console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>pushNewDatapushNewDatapushNewData>>>>>>>>>>>>>>>>>>>\",this.pushNewData)\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        console.log('Valid?', form.valid); // true or false\r\n        console.log('Name', form.value.name);\r\n        console.log('Email', form.value.email);\r\n        console.log('Message', form.value.message);\r\n      }\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n    <button class=\"btn btn-primary mb-2\" (click)=\"enable = !enable\" >Add User</button>\r\n   \r\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\">\r\n    <div class=\"input-box\" *ngIf=\"enable\">\r\n        <label>Enter Name</label>\r\n        <input type=\"text\" formControlName=\"name\"  class=\"form-control\" [(ngModel)] =\"data.firstName\">\r\n        <!-- {{data.firstName}} -->\r\n        <button class=\"btn btn-success mb2\" (click) =\"addData()\" id=\"successbtn\">Save</button>\r\n    </div>\r\n    </form>\r\n    <div *ngFor = \"let user of pushNewData\" class=\"data-enter\" >{{user.firstName}}</div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  registeredForm: FormGroup;\n\n  constructor(private formbuilder : FormBuilder) { }\n\n   validate= false;\n\n\n  ngOnInit(): void {\n    this.registeredForm = this.formbuilder.group({\n      name: ['', Validators.required],\n  \n    });  \n  }\n\n  add() {\n    this.validate= true;\n  }\n\n}\n","\n<form [formGroup]=\"registeredForm\" (ngSubmit)=\"add()\">\n\n<div class=\"formgroup\" >\n    <label>Enter Name</label>\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\"> \n    <app-validation [control]=\"registeredForm.controls.name\" [submit]=\"validate\"></app-validation>\n</div>\n<button class=\"btn btn-success\">Confirm</button>\n</form>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './validation.component.html',\n  styleUrls: ['./validation.component.css']\n})\nexport class ValidationComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() control;\n  @Input() submit;\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<span *ngIf= \" ( control.touched  ||  submit)\">\n<small  *ngIf=\"control.errors?.required\">Name Required !</small>\n\n</span>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PostService } from '../service/post.service';\n\n@Component({\n  selector: 'app-id-generate',\n  templateUrl: './id-generate.component.html',\n  styleUrls: ['./id-generate.component.css']\n})\nexport class IdGenerateComponent implements OnInit {\n\n  newData;\n\n  constructor(\n    private route : ActivatedRoute,\n    private postservice : PostService\n  ) { }\n\n  ngOnInit(): void {\n   const id = this.route.snapshot.paramMap.get('id');\n   this.postservice.getPostById(id).subscribe(data =>{\n    this.newData = data;\n    console.log(\">>>>>>>The New data is>>>>>>>\",this.newData);\n   } );\n  }\n\n}\n","<p>id-generate works!</p>\n\n\n<button class=\"btn-dark\" routerLink =\"/post\">Return To Post</button>\n\n<div class=\"card\">\n        <div class=\"card-body\" *ngIf=\"newData\">\n        <!-- *ngFor = \"let apiData of newData\" -->\n        {{newData.title}}\n        <!-- <p>id-generate works!</p>\n\n<p>id-generate works!</p> -->\n\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { User } from '../module/user';\nimport { Observable , of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\nusers: User[];\ndata: Observable <any>;\n\n  constructor() { \n\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n  }\n\n  getData(){\n    this.data = new Observable( observer =>{\n      setTimeout(()=>{\n        observer.next(1);\n      },1000);\n      setTimeout(()=>{\n        observer.next(2);\n      },2000);\n      setTimeout(()=>{\n        observer.next(3);\n      },3000);\n      setTimeout(()=>{\n        observer.next({name:\"muthu\"});\n      },4000);\n    })\n    return this.data;\n  }\n\n  getUsers():Observable<User[]> { \n    console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n    return of(this.users);\n  }\n\n  // getUsers():User[] { \n  //   console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n  //   return this.users;\n  // }\n\n\n\n  addUser(user:User) {  \n    // this.user.hide = true;\n\n    this.users.unshift(user);\n    console.log(\"It is now unshifting the value>>>>>>>>>>>>>>>>>>>>>>>>>\")\n  //   this.user = {\n  //     firstName: '',\n  //     lastName: '',\n  //     email: '',\n  //     age: null,\n  //     balance: null,\n  //   };\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../module/user';\nimport { Observable , of, Observer } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObservableDataService {\n\n  users: User[];\n  data: Observable <any>;\n\n  constructor() { \n\n\n    this.users = [\n      {\n        firstName: 'muthu',\n        lastName: 'rave',\n        email: 'muthurave@gmail.com',\n        age: 60,\n        balance: 5000,\n        registerd: new Date(),\n        hide: true,\n        // image:\"//lorempixel.com/600/600/pepole/2\"\n      },\n      {\n        firstName: 'rave',\n        lastName: 'muthu',\n        email: 'ravemuthu@gmail.com',\n        age: 50,\n        balance: 1000,\n        registerd: new Date(),\n        hide: true,\n      },\n    ];\n  }\n\n\n  // getDummyData():Observable<any>{\n  //   // return of(this.newData);\n  // }\n\n  getData(){\n    this.data = new Observable( observer =>{\n      setTimeout(()=>{\n        observer.next(1);\n      },1000);\n      setTimeout(()=>{\n        observer.next(2);\n      },2000);\n      setTimeout(()=>{\n        observer.next(3);\n      },3000);\n      setTimeout(()=>{\n        observer.next(4);\n      },4000);\n    })\n    return this.data;\n  }\n\n  // Normal \n  // getUsers():User[] { \n  //   console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n  //   return this.users;\n  // }\n\n  // Using Observable\n  getUsers():Observable<User[]> { \n    console.log(\">>>>>>>>>>>>>>>fetching the data from the service >>>>>>>>>>>>>>>>>>>>>>>>>....\");\n    return of(this.users);\n  }\n\n  \n}","import { Injectable } from '@angular/core';\nimport { PostUser } from '../module/post.service';\nimport { Observable } from 'rxjs';\nimport { HttpClient , HttpHeaders } from '@angular/common/http';\n\n\nconst httpOption = {\n  headers: new HttpHeaders({'Content-Type'  : 'application/json'})\n };\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n \n  postUrl : string = \"https://jsonplaceholder.typicode.com/posts\";\n\n  constructor(private http : HttpClient) { }\n\n    getPosts() : Observable<PostUser[]> { //<PostUser[]>\n      return this.http.get<any>(this.postUrl);\n    }\n\n    savePost(post): Observable<any>{\n      return this.http.post<any>(this.postUrl,post,httpOption);\n    }\n\n    updatePost(post): Observable<any> {\n       const url = `${this.postUrl}/${post.id}`;\n       return this.http.put<any>(url,post); \n    }\n\n    removePost(post): Observable<any>{\n      const id = typeof post === 'number' ? post : post.id;\n      const url = `${this.postUrl}/${id}`;\n      return this.http.delete<any>(url); \n\n    }\n\n    getPostById(id) : Observable<any> { \n      const url = `${this.postUrl}/${id}`;\n      console.log(\"The url is >>>>>>>>>>>>>>>>>>>>>>.\",url);\n      return this.http.get<any>(url);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}